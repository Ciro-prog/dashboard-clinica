 => => resolve docker.io/library/python:3.11-slim@sha256:1d6131b5d479888b43200645e03a78443c7157efbdb730e6b48129740727c312                                                               0.4s
 => [internal] load build context                                                                                                                                                       0.3s
 => => transferring context: 10.64kB                                                                                                                                                    0.0s
 => [frontend-builder 1/6] FROM docker.io/library/node:18-alpine@sha256:8d6421d663b4c28fd3ebc498332f249011d118945588d0a35cb9bc4b8ca09d9e                                                0.0s
 => CACHED [frontend-builder 2/6] WORKDIR /app/frontend-admin                                                                                                                           0.0s
 => [frontend-builder 3/6] COPY frontend-admin/package*.json ./                                                                                                                         1.4s
 => [stage-1  2/10] RUN apt-get update && apt-get install -y     gcc     curl     && rm -rf /var/lib/apt/lists/*                                                                       71.3s
 => [frontend-builder 4/6] RUN npm install                                                                                                                                             21.4s
 => [frontend-builder 5/6] COPY frontend-admin/ ./                                                                                                                                      1.7s
 => [frontend-builder 6/6] RUN npm run build                                                                                                                                           13.4s
 => [stage-1  3/10] WORKDIR /app                                                                                                                                                        0.9s
 => [stage-1  4/10] COPY requirements.txt .                                                                                                                                             0.8s
 => [stage-1  5/10] RUN pip install --no-cache-dir -r requirements.txt                                                                                                                 94.4s
 => ERROR [stage-1  6/10] RUN python -c "import minio; print("MinIO installed successfully")" || (echo "MinIO installation failed" && exit 1)                                           1.7s
------
 > [stage-1  6/10] RUN python -c "import minio; print("MinIO installed successfully")" || (echo "MinIO installation failed" && exit 1):
1.080   File "<string>", line 1
1.080     import minio; print(MinIO
1.080                        ^
1.080 SyntaxError: '(' was never closed
1.089 MinIO installation failed
------
Dockerfile.admin:29

--------------------

  27 |     RUN pip install --no-cache-dir -r requirements.txt

  28 |             # Verificar instalación MinIO después de instalar requirements

  29 | >>>         RUN python -c "import minio; print("MinIO installed successfully")" || (echo "MinIO installation failed" && exit 1)

  30 |

  31 |     # Copy backend code

--------------------

failed to solve: process "/bin/sh -c python -c \"import minio; print(\"MinIO installed successfully\")\" || (echo \"MinIO installation failed\" && exit 1)" did not complete successfully: exit code: 1

❌ Backend build failed
cirolinux@cirolinux:/opt/dashboard-clinica/scripts$

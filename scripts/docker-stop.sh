#!/bin/bash

# Script para detener Dashboard Cl√≠nica Docker
# Uso: ./scripts/docker-stop.sh [--clean]

set -e

# Colores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

log() {
    echo -e "${GREEN}[CLINIC-DOCKER]${NC} $1"
}

warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

# Banner
echo -e "${GREEN}"
cat << 'EOF'
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë        üõë DETENIENDO DASHBOARD CL√çNICA         ‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
EOF
echo -e "${NC}"

CLEAN_MODE=false

if [[ "$1" == "--clean" ]]; then
    CLEAN_MODE=true
    warning "Modo limpieza activado - se eliminar√°n im√°genes y vol√∫menes"
fi

# Detener servicios
log "üõë Deteniendo servicios..."
docker-compose down --remove-orphans

if [ "$CLEAN_MODE" == "true" ]; then
    log "üßπ Eliminando im√°genes de Dashboard Cl√≠nica..."
    
    # Eliminar im√°genes espec√≠ficas del proyecto
    docker images | grep "dashboard-clinica" | awk '{print $3}' | xargs -r docker rmi -f
    docker images | grep "clinic-" | awk '{print $3}' | xargs -r docker rmi -f
    
    log "üóëÔ∏è Eliminando vol√∫menes..."
    docker-compose down -v
    
    # Eliminar vol√∫menes espec√≠ficos si existen
    docker volume rm clinic-backend-uploads 2>/dev/null || true
    docker volume rm clinic-backend-logs 2>/dev/null || true
    docker volume rm clinic-admin-logs 2>/dev/null || true
    
    log "üßΩ Limpiando im√°genes no utilizadas..."
    docker system prune -f
    
    log "‚úÖ Limpieza completa terminada"
else
    log "‚ÑπÔ∏è Servicios detenidos (use --clean para limpieza completa)"
fi

# Mostrar estado final
info "üìä Estado final de contenedores:"
docker-compose ps

log "üè• Dashboard Cl√≠nica detenido exitosamente"
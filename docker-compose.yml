# Docker Compose para Dashboard Clínica - Configuración Multi-Container

services:
  # Frontend Cliente - Sistema Principal de Clínicas (con fondo oscuro)
  frontend-client:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: clinic-frontend-client
    ports:
      - "60521:80"
    environment:
      - NODE_ENV=production
      - VITE_API_URL=http://localhost:60519
    networks:
      - clinic-network
    restart: unless-stopped
    depends_on:
      - backend-api
    profiles:
      - development
      - production
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`localhost`) && PathPrefix(`/`)"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"

  # Backend API - FastAPI Principal
  backend-api:
    build:
      context: ./clinic-admin-backend
      dockerfile: Dockerfile
    container_name: clinic-backend-api
    ports:
      - "60519:8000"
    environment:
      - PYTHONPATH=/app
      - MONGODB_URL=mongodb://admin:PampaServers2025@host.docker.internal:60516/clinica-dashboard?authSource=admin
      - ADMIN_SECRET_KEY=${ADMIN_SECRET_KEY:-clinic-admin-super-secret-key-2024}
      - API_SECRET_KEY=${API_SECRET_KEY:-clinic-api-secret-key-2024}
      - ADMIN_SESSION_DURATION=${ADMIN_SESSION_DURATION:-24}
      - CORS_ORIGINS=["http://localhost:60521","http://localhost:60523","http://host.docker.internal:60521","http://host.docker.internal:60523"]
      - INIT_TEST_DATA=${INIT_TEST_DATA:-false}
    networks:
      - clinic-network
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway"
    profiles:
      - development
      - production
    volumes:
      - backend-uploads:/app/uploads
      - backend-logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`localhost`) && PathPrefix(`/api/`)"
      - "traefik.http.services.backend.loadbalancer.server.port=8000"

  # Admin Frontend - React Admin del Backend (DESACTIVADO)
  admin-frontend:
    build:
      context: ./clinic-admin-backend/frontend
      dockerfile: Dockerfile
    container_name: clinic-admin-frontend
    ports:
      - "60523:5173"
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:60519
      - VITE_ADMIN_API_URL=http://localhost:60519/api
    networks:
      - clinic-network
    restart: unless-stopped
    depends_on:
      - backend-api
    profiles:
      - disabled
    volumes:
      - admin-frontend-logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5173"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.admin.rule=Host(`localhost`) && PathPrefix(`/admin/`)"
      - "traefik.http.services.admin.loadbalancer.server.port=5173"

networks:
  clinic-network:
    driver: bridge
    name: clinic-network

volumes:
  backend-uploads:
    name: clinic-backend-uploads
  backend-logs:
    name: clinic-backend-logs
  admin-frontend-logs:
    name: clinic-admin-logs

# Configuración adicional para desarrollo y producción
x-common-variables: &common-variables
  TZ: America/Bogota
  LANG: es_CO.UTF-8

# Profiles configurados individualmente en cada servicio
